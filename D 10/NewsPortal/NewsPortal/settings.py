"""
Django settings for NewsPortal project.

Generated by 'django-admin startproject' using Django 4.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-#dl*+&rg@@99i-soi%8#+r72yzlrs(dihevkd@zs=#v+b+a0_z'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'news.apps.NewsConfig',
    'accounts',

    'django.contrib.sites',
    'django.contrib.flatpages',
    'django_filters',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',

    'django_apscheduler',
]
#SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',
]

ROOT_URLCONF = 'NewsPortal.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

WSGI_APPLICATION = 'NewsPortal.wsgi.application'


AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/


LANGUAGE_CODE = 'en'

LANGUAGES = [
    ('en-us', 'English'),
    ('ru', 'Русский')
]

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

LOGIN_URL = '/accounts/login/'
LOGIN_REDIRECT_URL = '/posts/'
LOGOUT_REDIRECT_URL = '/posts/'



ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_VERIFICATION = 'none'

ACCOUNT_FORMS = {'signup': 'news.forms.BasicSignupForm'}


# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STATICFILES_DIRS = [
    BASE_DIR / "static"
]

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]


EMAIL_HOST = 'smtp.yandex.ru'
EMAIL_PORT = 465
EMAIL_HOST_USER = 'send.testmail'
EMAIL_HOST_PASSWORD = 'XXX'
EMAIL_USE_SSL = True
#DEFAULT_FROM_EMAIL = 'send.testmail@yandex.ru'
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER + '@yandex.ru'

SITE_URL = 'http://127.0.0.1:8000'

APSCHEDULER_DATETIME_FORMAT = "N j, Y, f:s a"
APSCHEDULER_RUN_NOW_TIMEOUT = 25

#ACCOUNT_EMAIL_VERIFICATION = 'mandatory'


CELERY_BROKER_URL = 'redis://127.0.0.1:6379'
#CELERY_BROKER_URL = 'redis://:LgdckVgpsWCrRYsuGZAg4R6MiLDYUMkB@redis-19987.c293.eu-central-1-1.ec2.cloud.redislabs.com:19987'

CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379'
#CELERY_RESULT_BACKEND = 'redis://:LgdckVgpsWCrRYsuGZAg4R6MiLDYUMkB@redis-19987.c293.eu-central-1-1.ec2.cloud.redislabs.com:19987'

CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'


# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
# #    'style' : '{',
#
#     'formatters': {
#         'my_format': {
#             'format': '{asctime} - {levelname} - {message}',
#             'style': '{',
#         },
#         'my_format_2': {
#             'format': '{pathname}',
#             'style': '{',
#
#         },
#         'my_format_3': {
#             'format': '{exc_info}',
#             'style': '{',
#         },
#         'my_format_4': {
#             'format': '{levelname} - {asctime} - {module} - {message} - {pathname} - {exc_info}',
#             'style': '{',
#         },
#         'my_format_5': {
#             'format': '{levelname} - {asctime} - {module} - {message} - {pathname}',
#             'style': '{',
#         },
#     },
#     'filters': {
#         'require_debug_true': {
#             '()': 'django.utils.log.RequireDebugTrue',
#         },
#         'require_debug_false': {
#             '()': 'django.utils.log.RequireDebugFalse',
#         }
#     },
#     'handlers': {
#         'console': {
#             'filters': ['require_debug_true'],
#             'class': 'logging.StreamHandler',
#             'formatter': 'my_format',
#          },
#         'console_2': {
#             'filters': ['require_debug_true'],
#             'class': 'logging.StreamHandler',
#             'formatter': 'my_format_2',
#         },
#         'console_3': {
#             'filters': ['require_debug_true'],
#             'class': 'logging.StreamHandler',
#             'formatter': 'my_format_3',
#         },
#         'file_general': {
#             'filters': ['require_debug_false'],
#             "class": "logging.FileHandler",
#             "formatter": "my_format_4",
#             "filename": "general.log",
#         },
#
#         'file_error': {
#             "class": "logging.FileHandler",
#             "formatter": "my_format_4",
#             "filename": "errors.log",
#         },
#
#         'file_security': {
#             "class": "logging.FileHandler",
#             "formatter": "my_format_4",
#             "filename": "security.log",
#         },
#         'mail_admins': {
#             'filters': ['require_debug_false'],
#             'class': 'django.utils.log.AdminEmailHandler',
#             "formatter": "my_format_5",
#
# },
#     },
#
#
#     'loggers': {
#         'django': {
#             'handlers': ['console', 'file_general'],
#             'level': 'DEBUG',
#             'propagate': True,
#         },
#         'django_warning': {
#             'handlers': ['console_2'],
#             'level': 'WARNING',
#             'propagate': True,
#         },
#         'django_errors': {
#             'handlers': ['console', 'console_3'],
#             'level': 'ERROR',
#             'propagate': True,
#         },
#         'django_general': {
#             'handlers': ['file_general'],
#             'level': 'INFO',
#             'propagate': True,
#         },
#         'django.request': {
#             'handlers': ['mail_admins', 'file_error'],
#             'level': 'ERROR',
#             'propagate': False,
#         },
#         'django.server': {
#             'handlers': ['file_error', 'mail_admins'],
#             'level': 'ERROR',
#             'propagate': True,
#         },
#         'django.template': {
#             'handlers': ['file_error'],
#             'level': 'ERROR',
#             'propagate': True,
#         },
#         'django.db_backends': {
#             'handlers': ['file_error'],
#             'level': 'ERROR',
#             'propagate': True,
#         },
#         'django.security': {
#             'handlers': ['file_security'],
#             'level': 'INFO',
#             'propagate': True,
#         },
#     }
# }
